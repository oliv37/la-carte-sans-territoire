{"version":3,"sources":["components/game/map/MapGame.module.css","components/game/map/InputChoice.module.css","components/common/Button.module.css","components/Header.module.css","components/Home.module.css","components/game/map/ResetButton.module.css","components/game/map/ListChoice.module.css","components/game/map/SuccessMessage.module.css","data lazy /^/.//.*/.js$/ groupOptions: {} namespace object","components/Header.js","constants/gameType.js","appData.js","components/Home.js","components/NotFound.js","components/game/map/InputChoice.js","components/game/map/ListChoice.js","components/game/map/SuccessMessage.js","components/common/Button.js","components/game/map/ResetButton.js","utils/localStorage.js","components/game/map/mapHooks.js","components/Loading.js","components/Error.js","components/game/map/MapGame.js","hoc/lazy.js","App.js","serviceWorker.js","legacy/index.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","Header","className","styles","header","to","link","MAP","createMapData","routePath","title","description","type","lazyDataModule","appData","Home","container","key","item","NotFound","React","memo","inputId","label","checked","highlighted","disabled","onChange","labelRef","useRef","labelClassName","classNames","highlight","memoizedOnChange","useCallback","useEffect","current","scrollIntoView","name","input","value","ref","htmlFor","data","choiceIdSelected","idHighlighted","idsValidated","getChoiceLabel","index","includes","SuccessMessage","successMessage","props","btnClassName","button","ResetButton","blink","resetButton","localStorage","reduce","acc","methodName","args","window","apply","safeLocalStorageMethod","highlightTimeout","errorTimeout","getIdsValidatedFromLocalStorage","itemValue","getItem","JSON","parse","Array","isArray","useMapGame","useState","setChoiceIdSelected","mapIdSelected","setMapIdSelected","setIdHighlighted","setIdsValidated","hasError","setHasError","areas","document","querySelectorAll","from","forEach","el","mapId","dataset","addEventListener","classList","contains","useInitMapHandlersEffect","useInitIdsSelectedEffect","useInitIdsValidatedEffect","querySelector","add","selected","remove","useMapIdSelectedEffect","idHightlighted","timeoutId","setTimeout","clearTimeout","useIdHightlightedEffect","length","useIdsValidatedEffect","handleValidateClick","timeoutIdRef","isValid","newIdsValidated","setItem","stringify","useValidateClickCallback","handleResetClick","confirm","removeItem","useResetClickCallback","Loading","defaultOptions","lazy","mapDataModuleToProps","Component","otherProps","undefined","dataModule","setDataModule","catch","err","MapComponent","options","assign","finished","canValidate","main","section","mapTitle","onClick","aside","footer","btnStyles","error","children","basename","App","path","exact","component","LazyComponent","LazyMapGame","getLazyComponent","render","routeProps","Boolean","location","hostname","match","Map","newId","oldId","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae37c8fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MapGame_container__1uBE5\",\"main\":\"MapGame_main__245H2\",\"section\":\"MapGame_section__2k_Qm\",\"mapTitle\":\"MapGame_mapTitle__25G14\",\"selected\":\"MapGame_selected__S1TO3\",\"disabled\":\"MapGame_disabled__1bGjL\",\"highlight\":\"MapGame_highlight__yybZ_\",\"aside\":\"MapGame_aside__1p7Zj\",\"footer\":\"MapGame_footer__2MlV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InputChoice_container__158wK\",\"input\":\"InputChoice_input__2HCd6\",\"label\":\"InputChoice_label__1XG8a\",\"highlight\":\"InputChoice_highlight__1N730\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1s0hg\",\"error\":\"Button_error__3qGxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\",\"link\":\"Header_link__cU-VI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3-qjB\",\"item\":\"Home_item__1tLv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetButton\":\"ResetButton_resetButton__IvkAJ\",\"blink\":\"ResetButton_blink__3QHbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListChoice_container__pwaWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"successMessage\":\"SuccessMessage_successMessage__30uVD\"};","var map = {\n\t\"./africa.js\": [\n\t\t47,\n\t\t3\n\t],\n\t\"./frDpt.js\": [\n\t\t46,\n\t\t4\n\t],\n\t\"./frReg.js\": [\n\t\t45,\n\t\t5\n\t],\n\t\"./parisArr.js\": [\n\t\t44,\n\t\t6\n\t],\n\t\"./usState.js\": [\n\t\t43,\n\t\t7\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 41;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport styles from './Header.module.css';\n\nfunction Header() {\n    return (\n        <header className={styles.header}>\n          <Link to=\"/\" className={styles.link}>La carte sans territoire</Link>  \n        </header>\n    );\n}\n\nexport default Header;","export const MAP = \"MAP\";\n","import {MAP} from \"./constants/gameType\";\n\nfunction createMapData(id, routePath, title, description) {\n    return {\n        id,\n        routePath,\n        title,\n        description,\n        type: MAP,\n        lazyDataModule: () => import(`./data/${id}.js`),\n    };\n}\n\nconst frDpt = createMapData(\n    \"frDpt\",\n    \"/french-district\",\n    \"Départements français\",\n    \"Carte des départements français\"\n);\n\nconst frReg = createMapData(\n    \"frReg\",\n    \"/french-area\",\n    \"Régions de France\",\n    \"Carte des régions de France\"\n);\n\nconst usState= createMapData(\n    \"usState\",\n    \"/us-state\",\n    \"États des États-Unis\",\n    \"Carte des états des États-Unis\"\n);\n\nconst parisArr = createMapData(\n    \"parisArr\",\n    \"/paris-district\",\n    \"Arrondissements de Paris\",\n    \"Carte des arrondissements de Paris\"\n);\n\nconst africa = createMapData(\n    \"africa\",\n    \"/afrique\",\n    \"Afrique\",\n    \"Carte de l'Afrique\"\n);\n\nconst appData = [frDpt, frReg, usState, parisArr, africa];\n\nexport default appData;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport appData from '../appData';\nimport styles from './Home.module.css';\n\nfunction Home() {\n    return (\n        <ul className={styles.container}>\n        {\n            appData.map(({id, routePath, description}) => (\n                <li key={id} className={styles.item}>\n                    <Link to={routePath}>{description}</Link>    \n                </li>\n            ))\n        }\n        </ul>\n    );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction NotFound() {\n    return (\n        <div className=\"container-full-center text-large\">\n            La page demandée n'existe pas\n        </div>\n    );\n}\n\nexport default NotFound;","import React, {useEffect, useRef, useCallback} from 'react';\nimport classNames from 'classnames';\nimport styles from './InputChoice.module.css';\n\nfunction InputChoice({\n    inputId,\n    id, \n    label, \n    checked, \n    highlighted, \n    disabled, \n    onChange\n}) {\n    const labelRef = useRef(null);\n    const labelClassName = classNames(styles.label, {[styles.highlight]: highlighted});\n    const memoizedOnChange = useCallback(() => onChange(id), [onChange, id]);\n\n    useEffect(() => {\n        if (highlighted && labelRef.current) {\n            labelRef.current.scrollIntoView();\n        }\n    }, [highlighted]);\n\n    return (\n        <div className={styles.container}>\n            <input \n                id={inputId}\n                type=\"radio\" \n                name=\"choice\"\n                className={styles.input} \n                value={label} \n                checked={checked} \n                onChange={memoizedOnChange}\n                disabled={disabled}\n            />\n            <label ref={labelRef} htmlFor={inputId} className={labelClassName}>\n                {label}\n            </label>\n        </div>\n    );\n}\n\nexport default React.memo(InputChoice);\n","import React from 'react';\nimport InputChoice from './InputChoice';\nimport styles from './ListChoice.module.css';\n\nfunction ListChoice({\n    data, \n    onChange, \n    choiceIdSelected, \n    idHighlighted,\n    idsValidated, \n    getChoiceLabel\n}) {\n    return (\n        <div className={styles.container}>\n            {data.map((item, index) => {\n                const {id} = item;\n\n                return (\n                    <InputChoice \n                        key={index}\n                        inputId={`choice${index}`}\n                        id={id}\n                        label={getChoiceLabel(item)}\n                        checked={choiceIdSelected === id}\n                        highlighted={idHighlighted === id}\n                        disabled={idsValidated.includes(id)}\n                        onChange={onChange}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default React.memo(ListChoice);\n","import React from 'react';\nimport styles from './SuccessMessage.module.css';\n\nfunction SuccessMessage() {\n    return <span className={styles.successMessage}>Bravo !</span>;\n}\n\nexport default SuccessMessage;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './Button.module.css';\n\nfunction Button({className, ...props}) {\n    const btnClassName = classNames(className, styles.button);\n    return <button {...props} className={btnClassName} type=\"button\"/>\n}\n\nexport default React.memo(Button);\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './ResetButton.module.css';\n\nfunction ResetButton({className, blink = false, ...props}) {\n    const btnClassName = classNames(\n        className,\n        styles.resetButton,\n        {\n            [styles.blink]: blink\n        }\n    );\n    \n    return (\n        <button title=\"Recommencer\" {...props} className={btnClassName}>\n            {'\\u27F3'}\n        </button>\n    );\n}\n\nexport default ResetButton;\n","function safeLocalStorageMethod(methodName) {\n    return function(...args) {\n        try {\n            return window.localStorage[methodName].apply(window.localStorage, args);\n        } catch {}\n    };\n}\n\nconst methodNames = [\"setItem\", \"getItem\", \"removeItem\"];\n\nconst localStorage = methodNames.reduce((acc, methodName) => {\n    acc[methodName] = safeLocalStorageMethod(methodName);\n    return acc;\n}, {});\n\nexport default localStorage;\n","import {useState, useEffect, useCallback, useRef} from 'react';\nimport localStorage from \"../../../utils/localStorage\";\nimport styles from './MapGame.module.css';\n\nconst highlightTimeout = 1500;\nconst errorTimeout = 1500;\n\nfunction getIdsValidatedFromLocalStorage(id) {\n  try {\n      const itemValue = localStorage.getItem(id);\n      const idsValidated = itemValue && JSON.parse(itemValue);\n      if (Array.isArray(idsValidated)) {\n        return idsValidated;\n      }\n    } catch {}\n\n    return [];\n}\n\nexport function useInitMapHandlersEffect(id, setMapIdSelected, setIdHighlighted) {\n    useEffect(() => {\n      const areas = document.querySelectorAll(\"[data-id]\");\n      Array.from(areas).forEach(el => {\n        const mapId = el.dataset.id;\n        \n        el.addEventListener('click', () => {\n          \n          if (el.classList.contains(styles.disabled)) {\n            setIdHighlighted(mapId);\n            return;\n          }\n          \n          setMapIdSelected(mapId);\n        });\n      });\n    }, [id, setMapIdSelected, setIdHighlighted]);\n}\n\nexport function useInitIdsSelectedEffect(id, setChoiceIdSelected, setMapIdSelected) {\n  useEffect(() => {\n    setChoiceIdSelected(\"\");\n    setMapIdSelected(\"\");\n  }, [id, setChoiceIdSelected, setMapIdSelected]);\n}\n\nexport function useInitIdsValidatedEffect(id, setIdsValidated) {\n  useEffect(() => {\n    setIdsValidated(getIdsValidatedFromLocalStorage(id));\n  }, [id, setIdsValidated]);\n}\n\nexport function useMapIdSelectedEffect(mapIdSelected) {\n    useEffect(() => {\n      if (mapIdSelected) {\n        const el = document.querySelector(`[data-id=\"${mapIdSelected}\"`);\n        el.classList.add(styles.selected);\n  \n        return () => el && el.classList.remove(styles.selected);\n      }\n    }, [mapIdSelected]);\n}\n\nexport function useIdsValidatedEffect(idsValidated, setChoiceIdSelected, setMapIdSelected) {\n  useEffect(() => {\n      setChoiceIdSelected(\"\");\n      setMapIdSelected(\"\");\n\n      if (Array.isArray(idsValidated) && idsValidated.length) {\n        idsValidated.forEach(\n          id => document.querySelector(`[data-id=\"${id}\"]`).classList.add(styles.disabled)\n        );\n      } else {\n        Array.from(document.querySelectorAll('[data-id]')).forEach(\n          el => el.classList.remove(styles.disabled)\n        );\n      }\n\n  }, [idsValidated, setChoiceIdSelected, setMapIdSelected]);\n}\n\nexport function useIdHightlightedEffect(idHightlighted, setIdHighlighted) {\n  useEffect(() => {\n    if (idHightlighted) {\n      const el = document.querySelector(`[data-id='${idHightlighted}'`);\n      el.classList.add(styles.highlight);\n\n      const timeoutId = setTimeout(() => setIdHighlighted(\"\"), highlightTimeout);\n\n      return () => {\n        clearTimeout(timeoutId);\n        el.classList.remove(styles.highlight);\n      };\n    }\n  }, [idHightlighted, setIdHighlighted]);\n}\n  \nexport function useValidateClickCallback(\n  id, \n  mapIdSelected, \n  choiceIdSelected, \n  idsValidated, \n  setIdsValidated,\n  setHasError\n) {\n    const timeoutIdRef = useRef(null);\n\n    return useCallback(\n      function handleValidateClick() {\n        const isValid = mapIdSelected && mapIdSelected === choiceIdSelected;\n\n        clearTimeout(timeoutIdRef.current);\n        setHasError(!isValid);\n        \n        if (isValid) {\n          const newIdsValidated = [...idsValidated, choiceIdSelected];\n          \n          setIdsValidated(newIdsValidated);\n          localStorage.setItem(id, JSON.stringify(newIdsValidated));\n        } else {\n          timeoutIdRef.current = setTimeout(() => setHasError(false), errorTimeout);\n        }\n      }, [id, mapIdSelected, choiceIdSelected, idsValidated, setIdsValidated, setHasError]\n    );\n}\n\nexport function useResetClickCallback(id, setIdsValidated) {\n  return useCallback(\n    function handleResetClick() {\n      if (window.confirm(\"Souhaitez-vous vraiment recommencer cette carte ?\")) {\n        setIdsValidated([]);\n        localStorage.removeItem(id);\n      }\n    }, [id, setIdsValidated]\n  );\n}\n\nexport function useMapGame(id) {\n  const [choiceIdSelected, setChoiceIdSelected] = useState(\"\");\n  const [mapIdSelected, setMapIdSelected] = useState(\"\");\n  const [idHighlighted, setIdHighlighted] = useState(\"\");\n  const [idsValidated, setIdsValidated] = useState(() => getIdsValidatedFromLocalStorage(id));\n  const [hasError, setHasError] = useState(false);\n\n  useInitMapHandlersEffect(id, setMapIdSelected, setIdHighlighted);\n  useInitIdsSelectedEffect(id, setChoiceIdSelected, setMapIdSelected);\n  useInitIdsValidatedEffect(id, setIdsValidated);\n  useMapIdSelectedEffect(mapIdSelected);\n  useIdHightlightedEffect(idHighlighted, setIdHighlighted);\n  useIdsValidatedEffect(idsValidated, setChoiceIdSelected, setMapIdSelected);\n  const handleValidateClick = useValidateClickCallback(\n    id, mapIdSelected, choiceIdSelected, idsValidated, setIdsValidated, setHasError\n  );\n  const handleResetClick = useResetClickCallback(id, setIdsValidated);\n\n  return {\n    choiceIdSelected,\n    mapIdSelected,\n    idHighlighted,\n    idsValidated,\n    hasError,\n    setChoiceIdSelected,\n    handleValidateClick,\n    handleResetClick\n  };\n}\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"container-full-center text-large\">\n            Loading...\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\n\nfunction Error() {\n    return (\n        <div className=\"container-full-center text-large\">\n            Une erreur est survenue\n        </div>\n    );\n}\n\nexport default Error;","import React from 'react';\nimport classNames from 'classnames';\nimport ListChoice from './ListChoice';\nimport SuccessMessage from './SuccessMessage';\nimport Button from '../../common/Button';\nimport ResetButton from './ResetButton';\nimport {useMapGame} from './mapHooks';\nimport lazy from '../../../hoc/lazy';\nimport styles from './MapGame.module.css';\nimport btnStyles from '../../common/Button.module.css';\n\nconst defaultOptions = {\n  getChoiceLabel: item => `${item.id} - ${item.label}`\n};\n\nfunction MapGame({id, title, data, MapComponent, options}) {\n  const {getChoiceLabel} = Object.assign({}, defaultOptions, options);\n\n  const {\n    choiceIdSelected,\n    mapIdSelected,\n    idsValidated,\n    idHighlighted,\n    hasError,\n    setChoiceIdSelected,\n    handleValidateClick,\n    handleResetClick\n  } = useMapGame(id);\n\n  const finished = idsValidated.length === data.length;\n  const canValidate = mapIdSelected && choiceIdSelected;\n\n  return (\n    <div className={styles.container}>\n        <main className={styles.main}>\n          <section className={styles.section}>\n            <MapComponent/>\n            <p className={styles.mapTitle}>\n              {title}\n              {idsValidated.length > 0 && \n                <ResetButton blink={finished} onClick={handleResetClick}/>\n              }\n            </p>\n          </section>\n          <aside className={styles.aside}>\n            <ListChoice \n              data={data} \n              onChange={setChoiceIdSelected}\n              choiceIdSelected={choiceIdSelected}\n              idHighlighted={idHighlighted}\n              idsValidated={idsValidated}\n              getChoiceLabel={getChoiceLabel}\n            />\n          </aside>\n        </main>\n        <footer className={styles.footer}>\n          {finished ? <SuccessMessage/> : (\n            <Button \n              onClick={handleValidateClick} \n              disabled={!canValidate}\n              className={classNames({[btnStyles.error]: hasError})}\n              children=\"Valider\"\n            />\n          )}\n        </footer>\n    </div>\n  );\n}\n\nconst mapDataModuleToProps = ({data, MapComponent, options}) => ({data, MapComponent, options});\n\nexport default lazy(mapDataModuleToProps)(MapGame);\n","import React, {useState, useEffect} from 'react';\nimport Loading from '../components/Loading';\nimport Error from '../components/Error';\n\nconst lazy = mapDataModuleToProps => Component => ({lazyDataModule, ...otherProps}) => {\n    const [dataModule, setDataModule] = useState(undefined);\n\n    useEffect(() => {\n        setDataModule(undefined);\n\n        lazyDataModule()\n            .then(dataModule => setDataModule(dataModule))\n            .catch(err => setDataModule(false));\n\n    }, [lazyDataModule]);\n\n    if (dataModule === undefined) {\n        return <Loading/>;\n    }\n\n    if (dataModule === false) {\n        return <Error/>;\n    }\n\n    return (\n        <Component \n            {...mapDataModuleToProps(dataModule)}\n            {...otherProps}\n        />\n    );\n}\n\nexport default lazy;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport NotFound from './components/NotFound';\nimport LazyMapGame from './components/game/map/MapGame';\nimport {MAP} from './constants/gameType';\nimport appData from './appData';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst basename = isProd ? '/la-carte-sans-territoire' : undefined;\n\nfunction getLazyComponent(type) {\n  switch(type) {\n    case MAP:\n      return LazyMapGame;\n    default: \n      return LazyMapGame;\n  }\n}\n\nfunction App() {\n  return (\n    <Router basename={basename}>\n      <Header/>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        {\n          appData.map(({id, routePath, type, title, lazyDataModule}) => {\n            const LazyComponent = getLazyComponent(type);\n\n            return (\n              <Route \n                key={id}\n                path={routePath} \n                render={routeProps => (\n                  <LazyComponent \n                    {...routeProps} \n                    id={id} \n                    title={title}\n                    lazyDataModule={lazyDataModule}\n                  />\n                )} \n              />\n            );\n          })\n        }\n        <Route component={NotFound}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import localStorage from '../utils/localStorage';\n\nconst mapOldIdNewId = new Map();\n\nexport function migrateOldDataIds() {\n    mapOldIdNewId.forEach((newId, oldId) => {\n        const data = localStorage.getItem(oldId);\n        if (data) {\n            localStorage.setItem(newId, data);\n        }\n    });\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {migrateOldDataIds} from './legacy';\n\nmigrateOldDataIds();\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}