{"version":3,"sources":["components/Header.module.css","components/Home.module.css","components/game/map/SuccessMessage.module.css","components/common/Button.module.css","components/game/map/ResetButton.module.css","data lazy /^/.//.*/.js$/ groupOptions: {} namespace object","components/Header.js","constants/type.constants.js","appData.js","components/Home.js","components/NotFound.js","components/game/map/InputChoice.js","components/game/map/ListChoice.js","components/game/map/SuccessMessage.js","components/common/Button.js","components/game/map/ResetButton.js","utils/localStorage.js","utils/hooks.js","components/Loading.js","components/Error.js","components/game/map/MapGame.js","hoc/lazy.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","Header","className","styles","header","to","link","MAP","createMapData","routePath","description","type","lazyDataModule","appData","Home","container","key","item","NotFound","React","memo","label","checked","onChange","disabled","name","value","htmlFor","data","choiceIdSelected","idsValidated","getChoiceLabel","index","includes","SuccessMessage","successMessage","props","classNames","button","ResetButton","title","resetButton","localStorage","reduce","acc","methodName","args","window","apply","safeLocalStorageMethod","getIdsValidatedFromLocalStorage","itemValue","getItem","JSON","parse","Array","isArray","useMapGame","useState","setChoiceIdSelected","mapIdSelected","setMapIdSelected","setIdsValidated","useEffect","areas","document","querySelectorAll","from","forEach","el","mapId","dataset","addEventListener","target","classList","contains","useInitMapHandlersEffect","useInitIdsSelectedEffect","useInitIdsValidatedEffect","querySelector","add","remove","useMapIdSelectedEffect","length","useIdsValidatedEffect","handleValidateClick","useCallback","newIdsValidated","setItem","stringify","useValidateClickCallback","handleResetClick","removeItem","useResetClickCallback","Loading","defaultOptions","lazy","mapDataModuleToProps","Component","otherProps","undefined","dataModule","setDataModule","catch","err","MapComponent","options","assign","finished","canValidate","onClick","children","basename","App","path","exact","component","LazyComponent","LazyMapGame","getLazyComponent","render","routeProps","Boolean","location","hostname","match","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32d16613.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\",\"link\":\"Header_link__cU-VI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3-qjB\",\"item\":\"Home_item__1tLv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"successMessage\":\"SuccessMessage_successMessage__30uVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1s0hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetButton\":\"ResetButton_resetButton__IvkAJ\"};","var map = {\n\t\"./frDpt.js\": [\n\t\t40,\n\t\t3\n\t],\n\t\"./usState.js\": [\n\t\t39,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 37;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport styles from './Header.module.css';\n\nfunction Header() {\n    return (\n        <header className={styles.header}>\n          <Link to=\"/\" className={styles.link}>La carte sans territoire</Link>  \n        </header>\n    );\n}\n\nexport default Header;","export const MAP = \"MAP\";\n","import {MAP} from \"./constants/type.constants\";\n\nfunction createMapData(id, routePath, description) {\n    return {\n        id,\n        routePath,\n        description,\n        type: MAP,\n        lazyDataModule: () => import(`./data/${id}.js`),\n    };\n}\n\nconst appData = [\n    createMapData(\"frDpt\", \"/french-district\", \"Carte des départements français\"),\n    createMapData(\"usState\", \"/us-state\", \"Carte des états des États-Unis\")\n];\n\nexport default appData;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport appData from '../appData';\nimport styles from './Home.module.css';\n\nfunction Home() {\n    return (\n        <ul className={styles.container}>\n        {\n            appData.map(({id, routePath, description}) => (\n                <li key={id} className={styles.item}>\n                    <Link to={routePath}>{description}</Link>    \n                </li>\n            ))\n        }\n        </ul>\n    );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction NotFound() {\n    return (\n        <div className=\"container-full-center text-large\">\n            La page demandée n'existe pas\n        </div>\n    );\n}\n\nexport default NotFound;","import React from 'react';\n\nfunction InputChoice({id, label, checked, onChange, disabled}) {\n    return (\n        <div>\n            <input \n                id={id}\n                type=\"radio\" \n                name=\"choice\" \n                value={label} \n                checked={checked} \n                onChange={onChange}\n                disabled={disabled}\n            />\n            <label htmlFor={id}>{label}</label>\n        </div>\n    );\n}\n\nexport default React.memo(InputChoice);\n","import React from 'react';\nimport InputChoice from './InputChoice';\n\nfunction ListChoice({data, onChange, choiceIdSelected, idsValidated, getChoiceLabel}) {\n    return (\n        <div className=\"choices-container\">\n            {data.map((item, index) => {\n                const {id} = item;\n\n                return (\n                    <InputChoice \n                        key={index}\n                        id={`choice${index}`}\n                        label={getChoiceLabel(item)}\n                        checked={choiceIdSelected === id}\n                        disabled={idsValidated.includes(id)}\n                        onChange={() => onChange(id)}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default React.memo(ListChoice);\n","import React from 'react';\nimport styles from './SuccessMessage.module.css';\n\nfunction SuccessMessage() {\n    return <span className={styles.successMessage}>Bravo !</span>;\n}\n\nexport default SuccessMessage;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './Button.module.css';\n\nfunction Button(props) {\n    const className = classNames(props.className, styles.button);\n    return <button {...props} className={className} type=\"button\"/>\n}\n\nexport default React.memo(Button);\n","import React from 'react';\nimport styles from './ResetButton.module.css';\n\nfunction ResetButton(props) {\n    return (\n        <button {...props} title=\"Recommencer\" className={styles.resetButton}>\n            {'\\uD83D\\uDDD1'}\n        </button>\n    );\n}\n\nexport default ResetButton;\n","function safeLocalStorageMethod(methodName) {\n    return function(...args) {\n        try {\n            return window.localStorage[methodName].apply(window.localStorage, args);\n        } catch {}\n    };\n}\n\nconst methodNames = [\"setItem\", \"getItem\", \"removeItem\"];\n\nconst localStorage = methodNames.reduce((acc, methodName) => {\n    acc[methodName] = safeLocalStorageMethod(methodName);\n    return acc;\n}, {});\n\nexport default localStorage;\n","import {useState, useEffect, useCallback} from 'react';\nimport localStorage from \"./localStorage\";\n\nfunction getIdsValidatedFromLocalStorage(id) {\n  try {\n      const itemValue = localStorage.getItem(id);\n      const idsValidated = itemValue && JSON.parse(itemValue);\n      if (Array.isArray(idsValidated)) {\n        return idsValidated;\n      }\n    } catch {}\n\n    return [];\n}\n\nexport function useInitMapHandlersEffect(id, setMapIdSelected) {\n    useEffect(() => {\n      const areas = document.querySelectorAll(\"[data-id]\");\n      Array.from(areas).forEach(el => {\n        const mapId = el.dataset.id;\n        \n        el.addEventListener('click', e => {\n          if (e.target.classList.contains('disabled')) {\n            return;\n          }\n          \n          setMapIdSelected(mapId);\n        });\n      });\n    }, [id, setMapIdSelected]);\n}\n\nexport function useInitIdsSelectedEffect(id, setChoiceIdSelected, setMapIdSelected) {\n  useEffect(() => {\n    setChoiceIdSelected(\"\");\n    setMapIdSelected(\"\");\n  }, [id, setChoiceIdSelected, setMapIdSelected]);\n}\n\nexport function useInitIdsValidatedEffect(id, setIdsValidated) {\n  useEffect(() => {\n    setIdsValidated(getIdsValidatedFromLocalStorage(id));\n  }, [id, setIdsValidated]);\n}\n\nexport function useMapIdSelectedEffect(mapIdSelected) {\n    useEffect(() => {\n      if (mapIdSelected) {\n        const el = document.querySelector(`[data-id=\"${mapIdSelected}\"`);\n        el.classList.add('selected');\n  \n        return () => el && el.classList.remove('selected');\n      }\n    }, [mapIdSelected]);\n}\n\nexport function useIdsValidatedEffect(idsValidated, setChoiceIdSelected, setMapIdSelected) {\n  useEffect(() => {\n      setChoiceIdSelected(\"\");\n      setMapIdSelected(\"\");\n\n      if (Array.isArray(idsValidated) && idsValidated.length) {\n        idsValidated.forEach(\n          id => document.querySelector(`[data-id=\"${id}\"]`).classList.add('disabled')\n        );\n      } else {\n        Array.from(document.querySelectorAll('[data-id]')).forEach(\n          el => el.classList.remove('disabled')\n        );\n      }\n\n  }, [idsValidated, setChoiceIdSelected, setMapIdSelected]);\n}\n  \nexport function useValidateClickCallback(\n  id, mapIdSelected, choiceIdSelected, idsValidated, setIdsValidated\n) {\n    return useCallback(\n      function handleValidateClick() {\n        if (mapIdSelected && mapIdSelected === choiceIdSelected) {\n          const newIdsValidated = [...idsValidated, choiceIdSelected];\n          \n          setIdsValidated(newIdsValidated);\n          localStorage.setItem(id, JSON.stringify(newIdsValidated));\n        }\n      }, [id, mapIdSelected, choiceIdSelected, idsValidated, setIdsValidated]\n    );\n}\n\nexport function useResetClickCallback(id, setIdsValidated) {\n  return useCallback(\n    function handleResetClick() {\n      setIdsValidated([]);\n      localStorage.removeItem(id);\n    }, [id, setIdsValidated]\n  );\n}\n\nexport function useMapGame(id) {\n  const [choiceIdSelected, setChoiceIdSelected] = useState(\"\");\n  const [mapIdSelected, setMapIdSelected] = useState(\"\");\n  const [idsValidated, setIdsValidated] = useState(() => getIdsValidatedFromLocalStorage(id));\n\n  useInitMapHandlersEffect(id, setMapIdSelected);\n  useInitIdsSelectedEffect(id, setChoiceIdSelected, setMapIdSelected);\n  useInitIdsValidatedEffect(id, setIdsValidated);\n  useMapIdSelectedEffect(mapIdSelected);\n  useIdsValidatedEffect(idsValidated, setChoiceIdSelected, setMapIdSelected);\n  const handleValidateClick = useValidateClickCallback(\n    id, mapIdSelected, choiceIdSelected, idsValidated, setIdsValidated\n  );\n  const handleResetClick = useResetClickCallback(id, setIdsValidated);\n\n  return {\n    choiceIdSelected,\n    mapIdSelected,\n    idsValidated,\n    setChoiceIdSelected,\n    handleValidateClick,\n    handleResetClick\n  };\n}\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"container-full-center text-large\">\n            Loading...\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\n\nfunction Error() {\n    return (\n        <div className=\"container-full-center text-large\">\n            Une erreur est survenue\n        </div>\n    );\n}\n\nexport default Error;","import React from 'react';\nimport ListChoice from './ListChoice';\nimport SuccessMessage from './SuccessMessage';\nimport Button from '../../common/Button';\nimport ResetButton from './ResetButton';\nimport {useMapGame} from '../../../utils/hooks';\nimport lazy from '../../../hoc/lazy';\n\nconst defaultOptions = {\n  getChoiceLabel: item => `${item.id} - ${item.label}`\n};\n\nfunction MapGame({id, data, MapComponent, options}) {\n  const {getChoiceLabel} = Object.assign({}, defaultOptions, options);\n\n  const {\n    choiceIdSelected,\n    mapIdSelected,\n    idsValidated,\n    setChoiceIdSelected,\n    handleValidateClick,\n    handleResetClick\n  } = useMapGame(id);\n\n  const finished = idsValidated.length === data.length;\n  const canValidate = mapIdSelected && choiceIdSelected;\n\n  return (\n    <div className=\"map-game-container\">\n        <main>\n          <section>\n            <MapComponent/>\n          </section>\n          <aside>\n            <ListChoice \n              data={data} \n              onChange={setChoiceIdSelected}\n              choiceIdSelected={choiceIdSelected}\n              idsValidated={idsValidated}\n              getChoiceLabel={getChoiceLabel}\n            />\n          </aside>\n        </main>\n        <footer>\n          {finished ? <SuccessMessage/> : (\n            <Button \n              onClick={handleValidateClick} \n              disabled={!canValidate}\n              children=\"Valider\"\n            />\n          )}\n          {idsValidated.length > 0 && <ResetButton onClick={handleResetClick}/>}\n        </footer>\n    </div>\n  );\n}\n\nconst mapDataModuleToProps = ({data, MapComponent, options}) => ({data, MapComponent, options});\n\nexport default lazy(mapDataModuleToProps)(MapGame);\n","import React, {useState, useEffect} from 'react';\nimport Loading from '../components/Loading';\nimport Error from '../components/Error';\n\nconst lazy = mapDataModuleToProps => Component => ({lazyDataModule, ...otherProps}) => {\n    const [dataModule, setDataModule] = useState(undefined);\n\n    useEffect(() => {\n        setDataModule(undefined);\n\n        lazyDataModule()\n            .then(dataModule => setDataModule(dataModule))\n            .catch(err => setDataModule(false));\n\n    }, [lazyDataModule]);\n\n    if (dataModule === undefined) {\n        return <Loading/>;\n    }\n\n    if (dataModule === false) {\n        return <Error/>;\n    }\n\n    return (\n        <Component \n            {...mapDataModuleToProps(dataModule)}\n            {...otherProps}\n        />\n    );\n}\n\nexport default lazy;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport NotFound from './components/NotFound';\nimport LazyMapGame from './components/game/map/MapGame';\nimport {MAP} from './constants/type.constants';\nimport appData from './appData';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst basename = isProd ? '/la-carte-sans-territoire' : undefined;\n\nfunction getLazyComponent(type) {\n  switch(type) {\n    case MAP:\n      return LazyMapGame;\n    default: \n      return LazyMapGame;\n  }\n}\n\nfunction App() {\n  return (\n    <Router basename={basename}>\n      <Header/>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        {\n          appData.map(({id, routePath, type, lazyDataModule}) => {\n            const LazyComponent = getLazyComponent(type);\n\n            return (\n              <Route \n                key={id}\n                path={routePath} \n                render={routeProps => (\n                  <LazyComponent \n                    {...routeProps} \n                    id={id} \n                    lazyDataModule={lazyDataModule}\n                  />\n                )} \n              />\n            );\n          })\n        }\n        <Route component={NotFound}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}