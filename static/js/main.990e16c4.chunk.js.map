{"version":3,"sources":["data lazy /^/.//.*/.js$/ groupOptions: {} namespace object","components/Header.js","appData.js","components/Home.js","components/InputChoice.js","components/Choices.js","components/SuccessMessage.js","components/Button.js","components/game/defaultOptions.js","utils/localStorage.js","components/game/MapGame.js","utils/hooks.js","components/Loading.js","components/Error.js","components/game/LazyMapGame.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Header","to","createData","routePath","description","lazyData","appData","Home","className","key","React","memo","label","checked","onChange","disabled","type","name","value","htmlFor","data","choiceIdSelected","idsValidated","getChoiceLabel","item","index","includes","SuccessMessage","props","localStorage","reduce","acc","methodName","args","window","apply","safeLocalStorageCall","MapGame","MapComponent","options","assign","defaultOptions","useState","setChoiceIdSelected","mapIdSelected","setMapIdSelected","setIdsValidated","useEffect","areas","document","querySelectorAll","Array","from","forEach","el","mapId","dataset","addEventListener","target","classList","contains","useInitMapHandlersEffect","itemValue","getItem","JSON","parse","isArray","useInitIdsValidatedEffect","querySelector","add","remove","useMapSelectionEffect","handleValidateClick","useCallback","useHandleValidateClick","useValidatationEffect","isInitialMount","useRef","current","setItem","stringify","useUpdateLocalStorageEffect","finished","length","canValidate","onClick","children","Loading","LazyMapGame","otherProps","undefined","dataModule","setDataModule","catch","err","basename","App","path","exact","component","render","routeProps","Boolean","location","hostname","match","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.990e16c4.chunk.js","sourcesContent":["var map = {\n\t\"./frDpt.js\": [\n\t\t34,\n\t\t3\n\t],\n\t\"./usState.js\": [\n\t\t33,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 31;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header>\n          <Link to=\"/\">La carte sans le territoire</Link>  \n        </header>\n    );\n}\n\nexport default Header;","function createData(id, routePath, description) {\n    return {\n        id,\n        routePath,\n        description,\n        lazyData: () => import(`./data/${id}.js`),\n    };\n}\n\nconst appData = [\n    createData(\"frDpt\", \"/french-district\", \"Carte des départements français\"),\n    createData(\"usState\", \"/us-state\", \"Carte des états des États-Unis\")\n];\n\nexport default appData;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport appData from '../appData';\n\nfunction Home() {\n    return (\n        <ul className=\"home-container\">\n        {\n            appData.map(({id, routePath, description}) => (\n                <li key={id}>\n                    <Link to={routePath}>{description}</Link>    \n                </li>\n            ))\n        }\n        </ul>\n    );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction InputChoice({id, label, checked, onChange, disabled}) {\n    return (\n        <div>\n            <input \n                id={id}\n                type=\"radio\" \n                name=\"choice\" \n                value={label} \n                checked={checked} \n                onChange={onChange}\n                disabled={disabled}\n            />\n            <label htmlFor={id}>{label}</label>\n        </div>\n    );\n}\n\nexport default React.memo(InputChoice);\n","import React from 'react';\nimport InputChoice from './InputChoice';\n\nfunction Choices({data, onChange, choiceIdSelected, idsValidated, getChoiceLabel}) {\n    return (\n        <div className=\"choices-container\">\n            {data.map((item, index) => {\n                const {id} = item;\n\n                return (\n                    <InputChoice \n                        key={index}\n                        id={`choice${index}`}\n                        label={getChoiceLabel(item)}\n                        checked={choiceIdSelected === id}\n                        disabled={idsValidated.includes(id)}\n                        onChange={() => onChange(id)}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default React.memo(Choices);\n","import React from 'react';\n\nfunction SuccessMessage() {\n    return <span className=\"success\">Bravo !</span>;\n}\n\nexport default SuccessMessage;\n","import React from 'react';\n\nfunction Button(props) {\n    return <button {...props} type=\"button\"/>\n}\n\nexport default React.memo(Button);\n","export default {\n    getChoiceLabel(item) {\n        return `${item.id} - ${item.label}`;\n    }\n};","function safeLocalStorageCall(methodName) {\n    return function(...args) {\n        try {\n            return window.localStorage[methodName].apply(window.localStorage, args);\n        } catch {}\n    };\n}\n\nconst methodNames = [\"setItem\", \"getItem\"];\n\nconst localStorage = methodNames.reduce((acc, methodName) => {\n    acc[methodName] = safeLocalStorageCall(methodName);\n    return acc;\n}, {});\n\nexport default localStorage;\n","import React, {useState} from 'react';\nimport Choices from '../Choices';\nimport SuccessMessage from '../SuccessMessage';\nimport Button from '../Button';\nimport defaultOptions from './defaultOptions';\nimport {\n    useInitIdsValidatedEffect,\n    useInitMapHandlersEffect,\n    useMapSelectionEffect,\n    useHandleValidateClick,\n    useValidatationEffect,\n    useUpdateLocalStorageEffect\n  } from '../../utils/hooks';\n\nfunction MapGame({id, data, MapComponent, options}) {\n  const {getChoiceLabel} = Object.assign({}, defaultOptions, options);\n\n  const [choiceIdSelected, setChoiceIdSelected] = useState(\"\");\n  const [mapIdSelected, setMapIdSelected] = useState(\"\");\n  const [idsValidated, setIdsValidated] = useState([]);\n\n  // Effects\n  useInitMapHandlersEffect(setMapIdSelected);\n  useInitIdsValidatedEffect(id, setIdsValidated);\n  useMapSelectionEffect(mapIdSelected);\n  const handleValidateClick = useHandleValidateClick(\n    mapIdSelected, \n    choiceIdSelected, \n    idsValidated, \n    setIdsValidated\n  );\n  useValidatationEffect(\n    idsValidated, \n    setChoiceIdSelected, \n    setMapIdSelected\n  );\n  useUpdateLocalStorageEffect(id, idsValidated);\n\n  const finished = idsValidated.length === data.length;\n  const canValidate = mapIdSelected && choiceIdSelected;\n\n  return (\n    <div className=\"map-game-container\">\n        <main>\n          <section>\n            <MapComponent/>\n          </section>\n          <aside>\n            <Choices \n              data={data} \n              onChange={setChoiceIdSelected}\n              choiceIdSelected={choiceIdSelected}\n              idsValidated={idsValidated}\n              getChoiceLabel={getChoiceLabel}\n            />\n          </aside>\n        </main>\n        <footer>\n          {finished ? <SuccessMessage/> : (\n            <Button \n              onClick={handleValidateClick} \n              disabled={!canValidate}\n              children=\"Valider\"\n            />\n          )}\n        </footer>\n    </div>\n  );\n}\n\nexport default MapGame;\n","import {useEffect, useCallback, useRef} from 'react';\nimport localStorage from \"./localStorage\";\n\nexport function useInitMapHandlersEffect(setMapIdSelected) {\n    useEffect(() => {\n      const areas = document.querySelectorAll(\"[data-id]\");\n      Array.from(areas).forEach(el => {\n        const mapId = el.dataset.id;\n        \n        el.addEventListener('click', e => {\n          if (e.target.classList.contains('disabled')) {\n            return;\n          }\n          \n          setMapIdSelected(mapId);\n        });\n      });\n    }, [setMapIdSelected]);\n}\n\nexport function useInitIdsValidatedEffect(id, setIdsValidated) {\n  useEffect(() => {\n    const itemValue = localStorage.getItem(id);\n\n    try {\n      const idsValidated = itemValue && JSON.parse(itemValue);\n      Array.isArray(idsValidated) && setIdsValidated(idsValidated);\n    } catch {}\n    \n  }, [id, setIdsValidated]);\n}\n\nexport function useMapSelectionEffect(mapIdSelected) {\n    useEffect(() => {\n      if (mapIdSelected) {\n        const el = document.querySelector(`[data-id=\"${mapIdSelected}\"`);\n        el.classList.add('selected');\n  \n        return () => el.classList.remove('selected');\n      }\n    }, [mapIdSelected]);\n  }\n  \nexport function useHandleValidateClick(mapIdSelected, choiceIdSelected, idsValidated, setIdsValidated) {\n    return useCallback(\n      function handleValidateClick() {\n        if (mapIdSelected && mapIdSelected === choiceIdSelected) {\n          setIdsValidated([...idsValidated, choiceIdSelected]);\n        }\n      }, [mapIdSelected, choiceIdSelected, idsValidated, setIdsValidated]);\n  }\n  \nexport function useValidatationEffect(idsValidated, setChoiceIdSelected, setMapIdSelected) {\n    useEffect(() => {\n        setChoiceIdSelected(\"\");\n        setMapIdSelected(\"\");\n        idsValidated.forEach(\n            id => document.querySelector(`[data-id=\"${id}\"]`).classList.add('disabled')\n        );\n    }, [idsValidated, setChoiceIdSelected, setMapIdSelected]);\n}\n\nexport function useUpdateLocalStorageEffect(id, idsValidated) {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      return;\n    }\n\n    localStorage.setItem(id, JSON.stringify(idsValidated));\n  }, [id, idsValidated]);\n}\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\"loading-container\">\n            Loading...\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\n\nfunction Error() {\n    return (\n        <div className=\"error-container\">\n            Une erreur est survenue\n        </div>\n    );\n}\n\nexport default Error;","import React, {useState, useEffect} from 'react';\nimport MapGame from './MapGame';\nimport Loading from '../Loading';\nimport Error from '../Error';\n\nfunction LazyMapGame({lazyData, ...otherProps}) {\n    const [dataModule, setDataModule] = useState(undefined);\n\n    useEffect(() => {\n        setDataModule(undefined);\n\n        lazyData()\n            .then(dataModule => setDataModule(dataModule))\n            .catch(err => setDataModule(false));\n\n    }, [lazyData]);\n\n    if (dataModule === undefined) {\n        return <Loading/>;\n    }\n\n    if (dataModule === false) {\n        return <Error/>;\n    }\n\n    return (\n        <MapGame \n            key={JSON.stringify(dataModule.data)}\n            {...dataModule}\n            {...otherProps}\n        />\n    );\n}\n\nexport default LazyMapGame;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport LazyMapGame from './components/game/LazyMapGame';\nimport appData from './appData';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst basename = isProd ? '/la-carte-sans-territoire' : undefined;\n\nfunction App() {\n  return (\n    <Router basename={basename}>\n      <Header/>\n      <Route path=\"/\" exact component={Home} />\n      {\n        appData.map(({id, routePath, lazyData}) => (\n          <Route \n            key={id}\n            path={routePath} \n            render={routeProps => (\n              <LazyMapGame {...routeProps} id={id} lazyData={lazyData}/>\n            )} \n          />\n        ))\n      }\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}